{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-4a9b-8c7d-6e5f4a3b2c1d",
		"name": "Askit API",
		"description": "Exhaustive API collection for the Cynergyx-Askit backend application. Includes automated variable setting for a smooth workflow and all new endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"description": "User authentication and registration.",
			"item": [
				{
					"name": "Login Super Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"jwt_super_admin\", jsonData.access_token);",
									"    console.log(\"Set Super Admin JWT.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"super@admin.com\",\n    \"password\": \"password\",\n    \"organization\": \"superorg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login as the Super Admin (credentials from .env). This sets the `jwt_super_admin` variable."
					},
					"response": []
				},
				{
					"name": "Login Org Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"jwt_org_admin\", jsonData.access_token);",
									"    console.log(\"Set Org Admin JWT.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@innovatecorp.com\",\n    \"password\": \"StrongPassword123!\",\n    \"organization\": \"innovatecorp.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login as the organization admin to perform admin-level tasks. Sets `jwt_org_admin`."
					},
					"response": []
				},
				{
					"name": "Login Org Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"jwt_user\", jsonData.access_token);",
									"    pm.collectionVariables.set(\"user_id\", jsonData.user.id);",
									"    pm.collectionVariables.set(\"org_id\", jsonData.user.organization_id);",
									"    console.log(\"Set Org Member JWT, User ID, and Org ID.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"analyst@innovatecorp.com\",\n    \"password\": \"AnotherPassword456!\",\n    \"organization\": \"innovatecorp.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login as a regular organization member. This sets the `jwt_user` and other related variables."
					},
					"response": []
				}
			]
		},
		{
			"name": "Organization",
			"description": "Onboarding and managing organizations.",
			"item": [
				{
					"name": "Onboard New Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"onboarded_org_id\", jsonData.organization.id);",
									"    pm.collectionVariables.set(\"org_admin_id\", jsonData.users.find(u => u.email === 'admin@innovatecorp.com').id);",
									"    pm.collectionVariables.set(\"member_user_id\", jsonData.users.find(u => u.email === 'analyst@innovatecorp.com').id);",
									"    console.log(\"Set onboarded_org_id, org_admin_id, and member_user_id from response.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_super_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organization\": {\n        \"name\": \"Innovate Corp\",\n        \"domain\": \"innovatecorp.com\"\n    },\n    \"roles\": [\n        { \"name\": \"Data Analyst\", \"description\": \"Can view dashboards and run queries.\" },\n        { \"name\": \"Project Manager\", \"description\": \"Manages projects and users.\" }\n    ],\n    \"users\": [\n        {\n            \"email\": \"admin@innovatecorp.com\",\n            \"password\": \"StrongPassword123!\",\n            \"first_name\": \"Org\",\n            \"last_name\": \"Admin\",\n            \"is_admin\": true\n        },\n        {\n            \"email\": \"analyst@innovatecorp.com\",\n            \"password\": \"AnotherPassword456!\",\n            \"first_name\": \"Data\",\n            \"last_name\": \"Person\",\n            \"is_admin\": false,\n            \"roles\": [\"Data Analyst\"]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/organizations/onboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"organizations",
								"onboard"
							]
						},
						"description": "Requires Super Admin JWT. Onboards a new company."
					},
					"response": []
				},
				{
					"name": "Delete Organization (Soft)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_super_admin}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/organizations/{{onboarded_org_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"organizations",
								"{{onboarded_org_id}}"
							]
						},
						"description": "Requires Super Admin JWT. Deactivates an organization and all its users."
					},
					"response": []
				}
			]
		},
		{
			"name": "Data Sources & Access",
			"description": "Onboarding external databases and managing user access.",
			"item": [
				{
					"name": "Search for Data Sources",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/datasources?search=Postgres",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"datasources"
							],
							"query": [
								{
									"key": "search",
									"value": "Postgres",
									"description": "Search by name or type"
								}
							]
						},
						"description": "NEW: Search for available data sources within the organization."
					},
					"response": []
				},
				{
					"name": "Bulk Upload Data Sources",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"data_source_id\", jsonData.onboarded_ids[0]);",
									"    console.log(\"Set data_source_id from response.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_org_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": \"Production Postgres DB\",\n        \"type\": \"postgresql\",\n        \"host\": \"localhost\",\n        \"port\": 5432,\n        \"database_name\": \"rbac_db\",\n        \"username\": \"user\",\n        \"password\": \"password\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/datasources/bulk-upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"datasources",
								"bulk-upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Enriched Schema by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/datasources/{{data_source_id}}/schema",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"datasources",
								"{{data_source_id}}",
								"schema"
							]
						},
						"description": "Gets the real-time schema from the database, enhanced with any user-provided descriptions."
					},
					"response": []
				}
			]
		},
		{
			"name": "Chat & AI",
			"description": "Interacting with the AI agent.",
			"item": [
				{
					"name": "Create Chat Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"session_id\", jsonData.id);",
									"    console.log(\"Set session_id from response.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"AI Test Session\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/chat/sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chat",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Message to AI",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"Show me the last 5 users to log in.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/chat/sessions/{{session_id}}/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"chat",
								"sessions",
								"{{session_id}}",
								"messages"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_user}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:5000"
		},
		{
			"key": "jwt_super_admin",
			"value": ""
		},
		{
			"key": "jwt_org_admin",
			"value": ""
		},
		{
			"key": "jwt_user",
			"value": ""
		},
		{
			"key": "org_id",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "member_user_id",
			"value": ""
		},
		{
			"key": "org_admin_id",
			"value": ""
		},
		{
			"key": "onboarded_org_id",
			"value": ""
		},
		{
			"key": "data_source_id",
			"value": ""
		},
		{
			"key": "session_id",
			"value": ""
		},
		{
			"key": "role_id_pm",
			"value": ""
		},
		{
			"key": "role_request_id",
			"value": ""
		},
		{
			"key": "ds_request_id",
			"value": ""
		},
		{
			"key": "permission_id_user_create",
			"value": ""
		}
	]
}